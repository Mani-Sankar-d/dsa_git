There are n people in a line queuing to buy tickets, where the 0th person is at the front of the line and the (n - 1)th person is at the back of the line.

You are given a 0-indexed integer array tickets of length n where the number of tickets that the ith person would like to buy is tickets[i].

Each person takes exactly 1 second to buy a ticket. A person can only buy 1 ticket at a time and has to go back to the end of the line (which happens instantaneously) in order to buy more tickets. If a person does not have any tickets left to buy, the person will leave the line.

Return the time taken for the person initially at position k (0-indexed) to finish buying tickets.


int timeRequiredToBuy(vector<int>& tickets, int k) {
        queue<int> q;
        for(int i=0;i<tickets.size();i++)
            q.push(tickets[i]);

        int no_of_pops=-0;
        int t;
        int idx=0;
        while(tickets[k]!=0){
            t=q.front()-1;
            q.pop();
            no_of_pops++;
            if(t>0) q.push(t);
            while(tickets[idx]<=0) idx=(idx+1)%tickets.size();
            tickets[idx]--;
            idx=(idx+1)%tickets.size();
        }
        return no_of_pops;
    }